apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pso-explorer.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "pso-explorer.name" . }}
    helm.sh/chart: {{ include "pso-explorer.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pso-explorer.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pso-explorer.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.clusterrolebinding.serviceAccount.name }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.images.webserver.repository }}:{{ .Values.images.webserver.tag }}"
          imagePullPolicy: {{ .Values.images.webserver.pullPolicy }}
          env:
          - name: PSOX_ANONYMOUS_ACCESS
            value: {{ .Values.credentials.anonymousAccess | quote }}
          - name: PSOX_DASHBOARD_REFRESH
            value: {{ .Values.timeouts.dashboardRefresh | quote }}
          - name: PSOX_CACHE_TIMEOUT
            value: {{ .Values.timeouts.cacheRefresh | quote }}
          - name: PSOX_ALPHA_FEATURES
            value: {{ .Values.app.alphaFeatures | quote }}
          - name: APP_DEBUG
            value: {{ .Values.app.debug | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            timeoutSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: pso-credentials
              mountPath: /etc/pso-explorer
        - name: redis
          image: "{{ .Values.images.redis.repository }}:{{ .Values.images.redis.tag }}"
          imagePullPolicy: {{ .Values.images.redis.pullPolicy }}
          command:
            - redis-server
            - "/usr/local/etc/redis/redis.conf"
          volumeMounts:
            - name: redis-config
              mountPath: /usr/local/etc/redis
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true            
      volumes:
        - name: redis-config
          configMap:
            name: {{ include "pso-explorer.fullname" . }}-redis
        - name: pso-credentials
          secret:
            secretName: {{ template "pso-explorer.fullname" . }}-secret
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
